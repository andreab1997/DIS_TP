import numpy as np
import ReadTxt as readt
import Initialize
import zetas as zet
import Harmonics as harm
def Mbg_1(z,p):
    TR = 1./2.
    return 2 * TR * np.log((p[1]**2)/(p[0]**2)) * (z*z + (1-z)*(1-z))

def Mbg_2(z,p):
    return Initialize.Mbg2(z,p[1])

def Mbg_3_reg(z,p):
    return 0

def Mgg_1_loc(z,p):
    TR = 1./2.
    return -(4./3.) * TR * np.log((p[1]**2)/(p[0]**2)) 

def Mgg_2_reg(z,p):
    CF = 4./3.
    TR = 1./2.
    CA = 3.
    L = np.log((p[1]**2)/(p[0]**2))
    z1 = 1-z 
    LO = np.log(z)
    L1 = np.log(z1)
    return (L**2)*(CF*TR*(8*(1+z)*LO + (16./(3*z)) + 4 - 4*z - (z**2)*(16./3.))+CA*TR*((8./(3*z))-(16./3.)+(8./3.)*z-(z**2)*(8./3.)))+L*(CF*TR*(8*(1+z)*(LO**2) + LO*(24+40*z) - (16./(3*z)) + 64 - 32*z - (80./3.)*(z**2))+CA*TR*((16./3.)*(1+z)*LO + (184./(9*z)) - (232./9.) + z*(152./9.) - (z**2)*(184./9.)))+CF*TR*((4./3.)*(1+z)*(LO**3) + (LO**2)*(6+10*z) + LO*(32+48*z)-(8./z) + 80 - 48*z - 24*(z**2))+CA*TR*((4./3.)*(1+z)*(LO**2) + (1./9.)*(52+88*z)*LO - (4./3.)*LO*z + (1./27.)*((556./z) - 628 + 548*z - 700*(z**2)))

def Mgg_2_loc(z,p):
    CF = 4./3.
    TR = 1./2.
    CA = 3. #change here
    L = np.log((p[1]**2)/(p[0]**2))
    return (L**2)*((TR**2)*(16./9.))+L*(CF*TR*4 + CA*TR*(16./3.)) - CF*TR*15 + CA*TR*(10./9.)
    
def Mgg_2_sing(z,p):
    CF = 4./3.
    TR = 1./2.
    CA = 3.
    L = np.log((p[1]**2)/(p[0]**2))
    z1 = 1-z 
    return (L**2)*(CA*TR*(8./3.)*(1./z1))+L*(CA*TR*(80./9.)*(1./z1))+CA*TR*((224./27.)*(1./z1))

def Mbq_2(z,p):
    return Initialize.Mbq2(z,p[1])

def Mbq_3_reg(z,p):
    CF = 4./3.
    TR = 1./2.
    CA = 3.
    N_F = 5.
    L_M = np.log((p[0]**2)/(p[1]**2))
    H_0 = harm.H_0(z)
    H_1 = harm.H_1(z)
    H_01 = harm.H_01(z)
    H_001 = harm.H_001(z)
    H_011 = harm.H_011(z)
    H_0001 = harm.H_0001(z)
    H_0011 = harm.H_0011(z)
    H_0111 = harm.H_0111(z)
    H_00001 = harm.H_00001(z)
    H_00011 = harm.H_00011(z)
    H_00101 = harm.H_00101(z)
    H_00111 = harm.H_00111(z)
    H_01011 = harm.H_01011(z)
    H_01111 = harm.H_01111(z)
    H_0111 = harm.H_0111(z)
    H_0m1 = harm.H_0m1(z)
    H_m1 = harm.H_m1(z)
    H_00m1 = harm.H_00m1(z)
    H_0m1m1 = harm.H_0m1m1(z)
    H_0m11 = harm.H_0m11(z)
    H_01m1 = harm.H_01m1(z)
    H_0m1m1m1 = harm.H_0m1m1m1(z)
    H_0m101 = harm.H_0m101(z)
    H_00m1m1 = harm.H_00m1m1(z)
    H_00m11 = harm.H_00m11(z)
    H_000m1 = harm.H_000m1(z)
    H_001m1 = harm.H_001m1(z)
    H_0m10m1m1 = harm.H_0m10m1m1(z)
    H_00m1m1m1 = harm.H_00m1m1m1(z)
    H_00m10m1 = harm.H_00m10m1(z)
    H_00m101 = harm.H_00m101(z)
    H_000m1m1 = harm.H_000m1m1(z)
    H_000m11 = harm.H_000m11(z)
    H_0000m1 = harm.H_0000m1(z)
    H_0001m1 = harm.H_0001m1(z)
    H_0010m1 = harm.H_0010m1(z)
    a_Qq3 = 0. #chieder la migliore opzione a Marco (paper arXiv:1409.1135)
    return a_Qq3 + (CF*CF*TR)*(-(2./9.)*(4*(z**2)-3*z+3)*(H_0**4)-(2./9.)*(40*(z**2)+149*z+115)*(H_0**3)
+(2./3.)*(160*(z**2)+191*z-117)*(H_0**2)-(8./3.)*(4*(z**2)-3*z-3)*zet.zeta_2*(H_0**2)- (4*(z-1)*(20*(z**2)+41*z-4)*H_1*(H_0**2))/(3*z)
+(8*(4*(z**3)+27*(z**2)+3*z-4)*H_01*(H_0**2))/(3*z)-(4./3.)*(400*(z**2)-135*z+222)*H_0-(2./3.)*(80*(z**2)+469*z+221)*zet.zeta_2*H_0
+(16./9.)*(44*(z**2)+51*z-18)*zet.zeta_3*H_0 - (8*(z-1)*(16*(z**2)-43*z+66)*H_1*H_0)/(3*z)
+(16*(z-1)*(10*(z**2)+11*z-2)*H_01*H_0)/(3*z)+(16*(4*(z**3)-33*(z**2)-15*z+4)*H_001*H_0)/(3*z)
-(8*(z-1)*(6*(z**2)-z-6)*(H_1**3))/(9*z) +(8./15.)*(188*(z**2)-27*z-105)*(zet.zeta_2**2)-(4*(z-1)*(24*(z**2)-13*z+17)*(H_1**2))/(3*z)
+(64*((z+1)**2)*(2*z-1)*(H_01**2))/(3*z)+(4*(z-1)*(2*z+1)*(352*z+233))/(9*z)+(4*(84*(z**3)+79*(z**2)+75*z-60)*zet.zeta_2)/(3*z)
-(4*(z-1)*(40*(z**2)+33*z+4)*H_1*zet.zeta_2)/(3*z)-(8*(12*(z**3)+15*(z**2)+9*z+8)* H_01*zet.zeta_2)/(3*z)
+(4./9.)*(72*(z**2)-809*z-145)*zet.zeta_3 -(4*(z-1)*(80*(z**2)-181*z-9)*H_1)/(3*z) 
+(L_M**3) * ((16*(4*(z**2)+7*z+4)*H_1*(z-1))/(9*z) +(92*(z-1))/(9.)+ (16./9.)*z*(4*z+3)*H_0
+(z+1)*(-(8./3.)* (H_0**2)+(32*zet.zeta_2)/(3.)-(32.)/(3.)*H_01))
-(8*(8*(z**3)+100*(z**2)-85*z+66)*H_01)/(3*z) - (32./3.)*(z-1)*H_1*H_01 - (8*(20*(z**3)-95*(z**2)-43*z+4)*H_001)/(3*z)
+(L_M**2)* ((8./3.)*(4*(z**2)-9*z-3)*(H_0**2)+(8./3.)*(z+1)*(32*z-31)*H_0 + (16*(z-1)*(4*(z**2)+7*z+4)*H_1*H_0)/(3*z)
+(4*(z-1)*(32*(z**2)+81*z+12))/(3*z)+32*(3*z+2)*zet.zeta_2 +(8*(z-1)*(32*(z**2)+35*z+8)*H_1)/(3*z)
-(16*(4*(z**3)+21*(z**2)+9*z-4)*H_01)/(3*z)+(z+1)*(-(16./3.)* (H_0**3)+(32*zet.zeta_2-32*H_01)*H_0-32*zet.zeta_3+32*H_001))
+((z-1)*(4*(z**2)+7*z+4))/(z)*(-(2./9.)*(H_1**4)+((16./3.)*H_01-(20*zet.zeta_2)/(3))*(H_1**2)-(8./9.)* (H_0**3)*H_1
+((176*zet.zeta_3)/(9)-(64./3.)* H_001-(64./3.)* H_011)* H_1
+H_0 *(H_1* ((32./3.)* H_01-(16*zet.zeta_2)/(3))-(64./3.)* H_011))
-(8./3.)*(12*(z**2)-23*z-22)*H_011-(16*(20*(z**3)-21*(z**2)-33*z+4)* H_0001)/(3*z)-(32*(3*(z**2)+15*z+8)*H_0011)/(3*z)
+(16*(20*(z**3)+15*(z**2)-27*z-24)*H_0111)/(3*z)
+L_M *(-(32./3.)* (4*(z**2)+z+1)*(H_0**3)+(2./3.)*(136*(z**2)-111*z+213)* (H_0**2)+(8./27.)*(242*(z**2)-3984*z-633)*H_0
+(32./3.)*(2*z+3)*(8*z-3)*zet.zeta_2*H_0 + (8*(z-1)*(140*(z**2)-127*z+104)*H_1*H_0)/(9*z)
-32*(4*(z**2)+3*z+1)*H_01*H_0+(4*(z-1)*(28*(z**2)+21*z+4)*(H_1**2))/(3*z)
+(4*(z-1)*(3204*(z**2)+1625*z+180))/(27*z)-(16./9.)*(74*(z**2)+18*z+297)*zet.zeta_2-(16*(12*(z**3)-(z**2)+z-8)*zet.zeta_3)/(z)
+(16*(z-1)*(229*(z**2)-1175*z-239)* H_1)/(27*z)+(8*(8*(z**3)+303*(z**2)+363*z+104)*H_01)/(9*z)
+((z-1)*(4*(z**2)+7*z+4)*(-(8./9.)* (H_1**3)-(16./3.)* H_0 * (H_1**2)+(32./3.)*H_01* H_1))/(z)
+(32./3.)*(8*(z**2)+15)*H_001-(16*(12*(z**3)+27*(z**2)+3*z-8)*H_011)/(3*z)+(z+1)*(6*(H_0**4)-96*zet.zeta_2*(H_0**2)+(192*zet.zeta_3+96*H_001+64*H_011)*H_0
+(288./5.)*(zet.zeta_2**2)-32*(H_01**2)-96*H_0001+32*H_0111))
+(z+1)*((2./15.)*(H_0**5)+(4*zet.zeta_2+(16./3.)*H_01)*(H_0**3)+(-(88./3.)*zet.zeta_3-48*H_001)*(H_0**2)
+(-(448./5.)*(zet.zeta_2**2)+32*H_01*zet.zeta_2 -32*(H_01**2)+160*H_0001+128*H_0011)*H_0 +32*H_001*zet.zeta_2+80*H_011*zet.zeta_2-(80./3.)*zet.zeta_2*zet.zeta_3
+160*zet.zeta_5+H_01*(-(352./3.)*zet.zeta_3+128*H_001-64*H_011)-192*H_00001-768*H_00011-320*H_00101 +416*H_00111+192*H_01011+32*H_01111))+CF*(TR**2)*((16./27.)*(8*(z**2)+15*z+3)*(H_0**3)-(32./27.)*(56*(z**2)+33*z+21)*(H_0**2)
+(32./81.)*(1020*(z**2)+697*z+607)*H_0+(32./9.)*(12*(z**2)+37*z+19)*zet.zeta_2*H_0+(128*(z-1)*(28*(z**2)+z+10)*H_1*H_0)/(27*z)
-(128*(2*(z**3)+6*(z**2)+3*z+2)*H_01*H_0)/(9*z)+(L_M**3)*((128*(z-1)*(4*(z**2)+7*z+4))/(27*z)-(256./9.)*(z+1)*H_0) 
-(16*(z-1)*(38*(z**2)+47*z+20)*(H_1**2))/(27*z)-(64*(z-1)*(1781*(z**2)+539*z+656))/(243*z)
-(32*(56*(z**3)-179*(z**2)-95*z-40)*zet.zeta_2)/(27*z)-(64*(62*(z**3)+129*(z**2)+36*z-8)*zet.zeta_3)/(27*z)
+(128*(z-1)*(55*(z**2)+64*z+28)*H_1)/(81*z)+((z-1)*(4*(z**2)+7*z+4)*((16./27.)*(H_1**3)-(32./9.)* (H_0**2)*H_1+(32./9.)*zet.zeta_2*H_1))/(z)
-(64*(75*(z**3)+13*(z**2)+61*z-20)*H_01)/(27*z)+(L_M**2)*((32*(z-1)*(94*(z**2)+49*z+40))/(27*z)
-(32./9.)*(12*(z**2)+37*z+19)*H_0-(32*(z-1)*(4*(z**2)+7*z+4)*H_1)/(9*z)+(z+1)*((32./3.)*(H_0**2)-(64*zet.zeta_2)/(3)+(64./3.)*H_01))
+(64*(12*(z**3)+27*(z**2)+9*z+4)*H_001)/(9*z) + L_M* ((256*(z-1)*(40*(z**2)+79*z+31))/(81*z)
-(64./27.)*(18*(z**2)+65*z+101)*H_0+(4*(z**2)-7*z-13)*((32./9.)* (H_0**2)+(64*zet.zeta_2)/(9))+(64./3.)*(z-1)*(2*z-5)*H_1
+((z-1)*(4*(z**2)+7*z+4)*((32./9.)* (H_1**2)-(64./9.)*H_0*H_1))/(z)+(128*(5*(z**2)+5*z-2)*H_01)/(9*z)
+(z+1)*(-(64./9.)* (H_0**3)+((128./3.)* H_01 -(128*zet.zeta_2)/(3))*H_0+(256*zet.zeta_3)/(3.)-(128./3.)*H_001-(128./3.)* H_011))
+(64./9.)*(2*(z**2)+11*z+8)*H_011+(z+1)*(-(8./9.)*(H_0**4)+((64./3.)* H_01-(32*zet.zeta_2)/(3.))*(H_0**2)
+((1024*zet.zeta_3)/(9.)-(128./3.)* H_001)*H_0+(448./15.)*(zet.zeta_2**2)-(64./3.)* H_01*zet.zeta_2-(64./3.)* H_0111))+CF*(TR**2)*N_F *((L_M**2)* ((z+1)*(-(64./3.)* H_01+(32./3.)*(H_0**2)+(64*zet.zeta_2)/(3.))
-(32./9.)*(4*(z**2)-7*z-13)*H_0+(32*(z-1)*(4*(z**2)+7*z+4)*H_1)/(9*z)+(32./3.)*(z-1)*(2*z-5))
+L_M* ((z+1)*((128./3.)*H_0* H_01-(128./3.)* H_001-(64./3.)* H_011-(128./3.)*zet.zeta_2* H_0-(64./9.)* (H_0**3)+64*zet.zeta_3)
-(64*(2*(z**3)+(z**2)-2*z+4)*H_01)/(9*z)+(32./9.)*(4*(z**2)-7*z-13)*(H_0**2)+(64./27.)*((z**2)+2*z-58)*H_0
+(32*(z-1)*(74*(z**2)-43*z+20)*H_1)/(27*z)+((z-1)*(4*(z**2)+7*z+4)*((16./9.)* (H_1**2)-(64./9.)*H_0*H_1))/(z)
+(64./9.)*zet.zeta_2*(6*(z**2)+4*z-5)+(128*(z-1)*(25*(z**2)+94*z+34))/(81*z))
+(z+1)*(zet.zeta_2*((32./3.)*H_01-(32./3.)* (H_0**2))+(64./3.)* (H_0**2)* H_01-(128./3.)*H_0* H_001+(832./9.)*zet.zeta_3* H_0-(8./9.)*(H_0**4)-(32*(zet.zeta_2**2))/(3.))
+((z-1)*(28*(z**2)+z+10))/(z)*((128./27.)*H_0*H_1-(128./27.)*H_01)-(128*(2*(z**3)+6*(z**2)+3*z+2)*H_0*H_01)/(9*z)
+(64*(12*(z**3)+27*(z**2)+9*z+4)*H_001)/(9*z)-(16./27.)*(z-1)*(74*(z**2)-43*z+20)*(zet.zeta_2)/(z)
-(32./27.)*(100*(z**3)+183*(z**2)+33*z-4)*(zet.zeta_3)/(z)+ (L_M**3)*((32*(z-1)*(4*(z**2)+7*z+4))/(27*z)-(64./9.)*(z+1)*H_0)
+(32./9.)*zet.zeta_2*(6*(z**2)+4*z-5)*H_0+((z-1)*(4*(z**2)+7*z+4)*(-(16./9.)*zet.zeta_2*H_1-(32./9.)*H_1*(H_0**2)))/(z)
+(16./27.)*(8*(z**2)+15*z+3)*(H_0**3)-(32./27.)*(56*(z**2)+33*z+21)*(H_0**2)+(32./81.)*(800*(z**2)-57*z+111)*H_0-(64*(z-1)*(1156*(z**2)-203*z+328))/(243*z))+CA*CF*TR*(-(2./9.)*(4*z-17)*(H_0**4)-(4./9.)*(36*(z**2)+47*z+36)*(H_0**3)-(8./3.)*(z+3)*zet.zeta_2*(H_0**3)
+(64./3.)*(z**2)*(H_0**2)+(4./27.)*(1988*(z**2)-681*z+855)*(H_0**2)+8*(z-1)*(2*z+1)*zet.zeta_2*(H_0**2)
-(8./3.)*(2*z+5)*(3*z-4)*zet.zeta_2*(H_0**2)-(16./3.)*(20*z-13)*zet.zeta_3*(H_0**2)+(8*(z-1)*(122*(z**2)-19*z+113)*H_1*(H_0**2))/(9*z)
-(8*(19*(z**2)+19*z+8)*H_01*(H_0**2))/(3*z)+(16./5.)*(9*z-4)*(zet.zeta_2**2)*H_0+(16./5.)*(29*z-1)*(zet.zeta_2**2)*H_0
-(16*(z-1)*(19*(z**2)+16*z+10)*(H_1**2)*H_0)/(9*z)-(64./9.)*(37*(z**2)+6)*H_0-(4*(48876*(z**3)+9339*(z**2)+16218*z+2624)*H_0)/(81*z)
-(8./9.)*(152*(z**2)-39*z+60)*zet.zeta_2*H_0-(4*(170*(z**3)+199*(z**2)+175*z+80)*zet.zeta_2*H_0)/(9*z)-(16*(24*(z**3)-31*(z**2)+215*z+4)*zet.zeta_3* H_0)/(9*z)
-(32*(z-1)*(733*(z**2)-62*z+301)*H_1*H_0)/(27*z)-(32*(19*(z**3)-24*(z**2)-6*z+10)*H_0m1*H_0)/(9*z)
+(16*(18*(z**3)+119*(z**2)-2*z+51)*H_01*H_0)/(3*z)-(32*(4*(z**3)-23*(z**2)-2*z-8)*H_001*H_0)/(3*z)
+(8*(z-1)*(2*z+1)*(14*z+1)*(H_1**3))/(27*z)-(8*(96*(z**3)-427*(z**2)+134*z-148)*(zet.zeta_2**2))/(15*z)
+(8*(116*(z**3)-87*(z**2)-3*z+4)*(zet.zeta_2**2))/(15*z)+(4*(z-1)*(616*(z**2)+313*z+355)*(H_1**2))/(27*z)
+(4*(z-1)*(75516*(z**2)-7654*z+23205))/(81*z)-(8./9.)*(9*(z**2)+185*z+38)*zet.zeta_2
+(8*(1868*(z**3)-1164*(z**2)+1344*z-515)*zet.zeta_2)/(27*z)+(4*(z-1)*(154*(z**2)+163*z+46)*H_1*zet.zeta_2)/(9*z)
-(8./3.)*(23*z+14)*H_01*zet.zeta_2-(8*(247*(z**3)-9*(z**2)+18*z+50)*zet.zeta_3)/(9*z)
+(8*(1015*(z**3)+1149*(z**2)+705*z+126)*zet.zeta_3)/(9*z)-(256./3.)*(z-2)*zet.zeta_2 *zet.zeta_3+8*(25*z-9)*zet.zeta_2*zet.zeta_3
+8*(3*z+5)*zet.zeta_5+8*(67*z-35)*zet.zeta_5-(64*(z-1)*(37*(z**2)+16)*H_1)/(9*z)
+(4*(z-1)*(7828*(z**2)+2755*z+4075)*H_1)/(81*z)+((z-1)*((z**2)+1)*(-(128./3.)*(H_1**2)-(128./3.)*H_0*H_1))/(z)
+((z+1)*(182*(z**2)-122*z+47)*((32./27.)*H_m1*H_0-(32./27.)*H_0m1))/(z)+(64*(6*(z**3)+19*(z**2)+10*z-6)*H_01)/(9*z)
+(8*(2820*(z**3)-3849*(z**2)+1128*z-1204)*H_01)/(27*z)
+(L_M**3)*((16./3.)*(2*z-1)*(H_0**2)+(16*(8*(z**2)+11*z+4)*H_0)/(9*z)-(8*(z-1)*(44*(z**2)-z+44))/(9*z)-(16*(z-1)*(4*(z**2)+7*z+4)*H_1)/(9*z)
+(z+1)*((32./3.)* H_01-(32*zet.zeta_2)/(3.)))
+(32*(19*(z**3)-51*(z**2)-6*z+10)*H_00m1)/(9*z)+(64./9.)*(19*(z**2)-15*z-6)*H_001
-(16*(306*(z**3)+561*(z**2)+144*z+193)*H_001)/(9*z)
+(L_M**2)*(-(8./3.)*(4*(z**2)-25*z+23)*(H_0**2)+(8./3.)*(4*(z**2)-9*z+6)*(H_0**2)+(16./9.)*(13*(z**2)-30*z+24)*H_0+(8*(246*(z**3)+163*(z**2)+91*z+40)*H_0)/(9*z)
+(16*(z-1)*(4*(z**2)+7*z+4)*H_1*H_0)/(3*z)-(8*(z-1)*(35*(z**2)-82*z+89))/(27*z)
-(8*(z-1)*(1829*(z**2)-403*z+605))/(27*z)-(8*(z-1)*(104*(z**2)+119*z+32)*H_1)/(9*z)
+((z+1)*(4*(z**2)-7*z+4)*(-(16./3.)*zet.zeta_2-(32./3.)*H_m1*H_0+(32./3.)*H_0m1))/(z)
+(10*z+7)*((32./3.)*H_01-(32*zet.zeta_2)/(3.))
+(z-1)*(-(32./3.)* (H_0**3)+(-32*zet.zeta_2-64*H_0m1)*H_0-96*zet.zeta_3+128*H_00m1)
+(z+1) *(-32*zet.zeta_3-32*H_0 *H_01+32*H_001))+((z+1)*(19*(z**2)-16*z+10))/(z) * (-(32./9.)* H_0* (H_m1**2)
+((16./9.)* (H_0**2)-(32./9.)*zet.zeta_2+(64./9.)* H_0m1)* H_m1-(64./9.)* H_0m1m1)+(8*(56*(z**3)-201*(z**2)-162*z-40)*H_011)/(9*z)
+((z-1)*(4*(z**2)+7*z+4))/(z)*((2./9.)*(H_1**4)+(4./3.)*(H_0**2)* (H_1**2)+(4./3.)*zet.zeta_2*(H_1**2)+(-(80./9.)*zet.zeta_3+(80./3.)*H_001+(16./3.)* H_011)* H_1
-(16./3.)* (H_01**2)+H_0*(-(16./9.)*(H_1**3)+(-(8./3.)*zet.zeta_2-16*H_01)*H_1+(80./3.)*H_011))
+(16*(32*(z**3)-87*(z**2)+45*z-24)*H_0001)/(3*z)+(2*z-1)*(128*H_0*H_0001-32*(H_0**2)*H_001)
-(16*(36*(z**3)+6*(z**2)-15*z-20)*H_0011)/(3*z)+z*(4*z-3)*(H_0*((32./3.)*zet.zeta_3+(32./3.)*H_001)
-(128./3.)*H_0001+(64./3.)*H_0011)+((z+1)*(4*(z**2)-7*z+4))/(z)*((32./9.)*H_0*(H_m1**3)
+(-(8./3.)*(H_0**2)-(-16./3.)*zet.zeta_2-(32./3.)* H_0m1)* (H_m1**2)+(-(8./9.)*(H_0**3)+((24./3.)*zet.zeta_2+(32./3.)* H_0m1-(32./3.)*H_01)*H_0
-16*zet.zeta_3+(64./3.)*H_0m1m1-(32./3.)*H_00m1+(64./3.)*H_001)* H_m1-(24./3.)*H_0m1*zet.zeta_2+(8./3.)*(H_0**2)*H_0m1
+H_0*(-(32./3.)* H_0m1m1+(32./3.)* H_0m11-(16./3.)*H_00m1+(32./3.)* H_01m1)-(64./3.)*H_0m1m1m1
-(32./3.)* H_0m101+(32./3.)*H_00m1m1-(64./3.)*H_00m11+(16./3.)*H_000m1-(64./3.)* H_001m1)
+L_M*((4./3.)*(4*z-5)*(H_0**4)-(8./9.)*(35*z-46)*(H_0**3)-(4./9.)*(606*(z**2)-346*z+377)*(H_0**2)
+(8*(z+1)*(16*(z**2)-19*z+16)*H_m1*(H_0**2))/(3*z)-(4*(z-1)*(8*(z**2)+17*z+8)*H_1*(H_0**2))/(z)
+(128./3.)*(z**2)*H_0+(16*(3657*(z**3)+2093*(z**2)+2330*z+224)*H_0)/(27*z)-(16./3.)*(16*(z**2)-19*z-25)*zet.zeta_2*H_0
+(8./3.)*(40*(z**2)-51*z+9)*zet.zeta_2*H_0+8*(9*z-25)*zet.zeta_3*H_0-8*(73*z+11)*zet.zeta_3*H_0
+(16*(z-1)*(203*(z**2)+47*z+140)*H_1*H_0)/(9*z)+(64*(2*(z**3)-9*(z**2)+3*z-4)*H_0m1*H_0)/(3*z)
+(8*(16*(z**3)-41*(z**2)-77*z-40)*H_01*H_0)/(3*z)-32*(5*z-1)*H_00m1*H_0-32*(11*z+5)*H_001*H_0
-(16./5.)*(7*z+27)*(zet.zeta_2**2)-(24./5.)*(65*z+11)*(zet.zeta_2**2)-(4*(z-1)*(20*(z**2)+21*z+2)*(H_1**2))/(3*z)
-(8*(z-1)*(11542*(z**2)+399*z+4036))/(27*z)-(32*(z+1)*(53*(z**2)-14*z+26)*zet.zeta_2)/(9*z)
+(8*(80*(z**3)-157*(z**2)+521*z-64)*zet.zeta_2)/(9*z)-(16*(z+1)*(4*(z**2)-z+4)*H_m1*zet.zeta_2)/(z)
+(4*(44*(z**3)-81*(z**2)-213*z-180)*zet.zeta_3)/(3*z)+(4*(164*(z**3)-231*(z**2)+81*z-12)*zet.zeta_3)/(3*z)
+(128*(z-1)*((z**2)+1)*H_1)/(3*z)-(8*(z-1)*(258*(z**2)-559*z-138)*H_1)/(9*z)
+((z+1)*(19*(z**2)-16*z+10))/(z)*((32./9.)* H_0m1-(32./9.)*H_m1*H_0)
+((z+1)*(53*(z**2)-2*z+26))/(z)*((64./9.)*H_0m1-(64./9.)*H_m1*H_0)
+((z-1)*(4*(z**2)+7*z+4))/(z)*((8./9.)*(H_1**3)+8*H_0*(H_1**2)+((16*zet.zeta_2)/(3.)-(32./3.)*H_01)*H_1)
-(8*(274*(z**3)-253*(z**2)+611*z-200)*H_01)/(9*z)-(16*(32*(z**3)-75*(z**2)+21*z-16)*H_00m1)/(3*z)
-(32./3.)*z*(4*z-3)*H_001+(32*(8*(z**2)+17*z+14)*H_001)/(3*z)
+((z+1)*(4*(z**2)-7*z+4))/(z)*((32./3.)*H_0*(H_m1**2)+(-(8./3.)*(H_0**2)+16*zet.zeta_2-(64./3.)* H_0m1
-(32./3.)*H_01)*H_m1+(16./3.)*H_0*H_0m1+(64./3.)*H_0m1m1
+(32./3.)*H_0m11-(16./3.)*H_00m1+(32./3.)*H_01m1)
+((z+1)*(8*(z**2)-5*z+8)*((32./3.)*H_m1*H_01-(32./3.)*H_0m11-(32./3.)*H_01m1))/(z)
+(16*(8*(z**3)+23*(z**2)+5*z-8)*H_011)/(3*z)+(z-1)*((8*zet.zeta_2+32* H_0m1)*(H_0**2)
+(128*H_0m1m1+64*H_00m1)*H_0-64*(H_0m1**2)+64*H_0m1*zet.zeta_2-96*H_000m1)-64*z*H_0001+160*(5*z+1)*H_0001
+(z+1)*(56*H_01*(H_0**2)-96*H_011*H_0+32*(H_01**2)+H_01*(-32*zet.zeta_2-(128./3.))
+192*H_000m1+32*H_0011-32*H_0111)+(128*(z-1))/(3*z))
-(32*(z-1)*(z+2)*(2*z+1)*H_0111)/(3*z)-64*(3*z-2)*H_00001+32*(23*z+27)*H_00011
+z*((32./3.)*zet.zeta_2*(H_0**3)+32*zet.zeta_3*(H_0**2)+64*H_0001*H_0-320*H_00001+128*H_00011)
+(z-1)*((4./15.)*(H_0**5)-(16./3.)*H_0m1*(H_0**3)+(32*H_00m1-32*H_0m1m1)*(H_0**2)
+(32*(H_0m1**2)+16*(-2+5)*zet.zeta_2*H_0m1+128*H_0m1m1m1-64*H_0m101-96*H_000m1)*H_0
+64*H_0m1m1*zet.zeta_2-96*H_00m1*zet.zeta_2+H_0m1*(48*(-5+3)*zet.zeta_3 -128*H_0m1m1-64*H_00m1+128*H_001)
+256*H_0m10m1m1+512*H_00m1m1m1+64*H_00m10m1-128*H_00m101+192*H_000m1m1
-384*H_000m11+128*H_0000m1-384*H_0001m1-128*H_0010m1)
+(z+1)*(-16*H_011*(H_0**2)+(48*(H_01**2)+(16*zet.zeta_2+(128./3.))*H_01-128*H_0011+64*H_0111)*H_0
+H_011*((256./3.)-16*zet.zeta_2)-16*H_001*zet.zeta_2+H_01*((160*zet.zeta_3)/(3.)-160*H_001)+288*H_00101
-128*H_00111-32*H_01011-32*H_01111)-(640*(z-1))/(9*z))
 
#In the one above maybe there is a minus sign missing in front 
def Mgq_2_reg(z,p):
    CF = 4./3.
    TR = 1./2.
    L = np.log((p[1]**2)/(p[0]**2))
    z1 = 1-z 
    L1 = np.log(z1)
    return CF*TR*(((16./(3*z))- (16./3.) +z*(8./3.))*(L**2) + ((160./(9*z)) - (160./9.) +z*(128./9.) + L1*((32./(3*z)) - (32./3.) + z*(16./3.)))*L + (4./3.)*((2./z)-2+z)*(L1**2) + (8./9.)*((10./z)-10+8*z)*L1 + (1./27.)*((448./z)-448+344*z))



#alphas[4] to alphas[5] pieces---> alphas[5] = alphas[4](1+alphas[4]P(1)+(alphas[4]**2)P(2)+...)

def P1(p):
    return Mgg_1_loc(0,p)

def P2(p):
    fact = np.log((p[1]**2)/(p[0]**2))
    return (2./9.)*(2*(fact**2)+ 33*fact - 7)
